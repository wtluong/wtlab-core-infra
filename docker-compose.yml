networks:
  core_homelab:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  npm_data:
  pihole_data:
  portainer_data:
  uptime_kuma_data:
  tailscale_data:

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - core_homelab

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80/tcp"
    environment:
      TZ: "${TIMEZONE}"
      WEBPASSWORD: "${PIHOLE_PASSWORD}"
      PIHOLE_DNS_: "8.8.8.8;8.8.4.4"
      DNSMASQ_LISTENING: "all"
      DNSDOMAIN: "${DNS_DOMAIN}"
      EXPAND_HOSTS: true
    volumes:
      - pihole_data:/etc/pihole      # runtime DBs/logs/caches
      - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d  # only configs
    networks:
      core_homelab:
        ipv4_address: 172.20.0.10

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - npm_data:/data               # runtime DB, logs, SSLs
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt  # configs
    networks:
      - core_homelab

  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    volumes:
      - ./homer:/www/assets
    ports:
      - "8082:8080"
    environment:
      - INIT_ASSETS=1
    networks:
      - core_homelab

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime_kuma_data:/app/data
    networks:
      - core_homelab

  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: tailscale
    network_mode: "host"
    volumes:
      - tailscale_data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: unless-stopped
    environment:
      TS_AUTHKEY: "${TAILSCALE_AUTHKEY}"
      TS_STATE_DIR: "/var/lib/tailscale"
      TS_EXTRA_ARGS: "--accept-dns=true --advertise-exit-node --advertise-routes=10.0.0.0/24"
