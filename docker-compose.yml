networks:
  homelab:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

services:
  # Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - homelab

  # DNS and Ad Blocking
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80/tcp"
    environment:
      TZ: '${TIMEZONE}'
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
      PIHOLE_DNS_: '8.8.8.8;8.8.4.4'
      DNSMASQ_LISTENING: 'all'
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    networks:
      homelab:
        ipv4_address: 172.20.0.10

  # Reverse Proxy
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    volumes:
      - './nginx-proxy-manager/data:/data'
      - './nginx-proxy-manager/letsencrypt:/etc/letsencrypt'
    networks:
      - homelab

  # Dashboard
  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    volumes:
      - './homer:/www/assets'
    ports:
      - "8082:8080"
    environment:
      - INIT_ASSETS=1
    networks:
      - homelab

  # Uptime Monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptime-kuma:/app/data
    networks:
      - homelab

  # Secure VPN (Primary Router Node)
  tailscale-router:
    image: tailscale/tailscale:latest
    container_name: tailscale-router
    hostname: tailscale-router
    network_mode: "host"   # Needed for routing/exit node
    volumes:
      - ./tailscale-router-data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: unless-stopped
    environment:
      TS_AUTHKEY: "${TAILSCALE_AUTHKEY}"
      TS_STATE_DIR: "/var/lib/tailscale"
      TS_EXTRA_ARGS: "--accept-dns=true --advertise-exit-node --advertise-routes=10.0.0.0/24"

  # Backup node (redundant LAN access, no exit node)
  tailscale-backup:
    image: tailscale/tailscale:latest
    container_name: tailscale-backup
    hostname: tailscale-backup
    network_mode: "host"           # Same as router to allow LAN routing
    volumes:
      - ./tailscale-backup-data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped
    environment:
      TS_AUTHKEY: "${TAILSCALE_BACKUP_AUTHKEY}"   # Separate auth key
      TS_STATE_DIR: "/var/lib/tailscale"
      TS_EXTRA_ARGS: "--accept-dns=true --advertise-routes=10.0.0.0/24"

volumes:
  portainer_data:
  uptime-kuma:
  tailscale-state:
  # per-container state volumes
  tailscale-router-data:
  tailscale-backup-data:

